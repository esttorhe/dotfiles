#!/usr/bin/env python3
"""
A do-not-disturb button for muting Dunst notifications in i3 using i3blocks

Mute is handled by passing 'DUNST_COMMAND_PAUSE' and 'DUNST_COMMAND_RESUME' to
the notify-send script and the 'DUNST_MUTE' environment variable is set to keep
track of the toggle.
"""

__author__ = "Jessey White-Cinis <j@cin.is>"
__copyright__ = "Copyright (c) 2019 Jessey White-Cinis"
__license__ = "MIT"
__version__ = "1.0.0"

import os
import subprocess
import json
import sys

def mute_on():
    '''Turns off dunst notifications'''
    subprocess.run(["dunstctl", "set-paused", "toggle"], check=True)
    return ""

def mute_off():
    '''Turns back on dunst notifications'''
    subprocess.run(["dunstctl", "set-paused", "toggle"], check=True)
    return ""

def clicked():
    '''Returns True if the button was clicked'''
    return (len(sys.argv) > 1)

def muted():
    '''Returns True if Dunst is muted'''
    proc = subprocess.Popen(["dunstctl", "is-paused"], stdout=subprocess.PIPE)
    mute = proc.stdout.read().strip().decode('ascii')
    return mute == 'true'

if clicked():
    # toggle button click to turn mute on and off
    if muted():
        RTN = mute_off()
    else:
        RTN = mute_on()
else:
    if muted():
        RTN = ""
    else:
        RTN = ""
print(RTN)
